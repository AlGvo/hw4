Home Work 4
Написать классы автомобилей, которыми можно управлять извне,
автомобили должны уметь "стартовать" и "менять свою скорость.

Требования.
1. Класс должен реализовать интерфейс MovableInterface.

2. При изменении скорости должно выводиться сообщение с какой скоростью в данный момент движется автомобиль.
3. Предусмотреть в своем классе тот факт, что у автомобиля есть максимальная скорость, которую он не способен превысить.
Максимальную скорость задавать при инициализацию обьекта (принимать параметр в конструкторе).


4. По возможности продемонстрировать принципы ООП:
а) наследование - создать абстрактный суперкласс и отнаследовать от него более конкретные классы
б) инкапсуляцию - скрыть реализацию, чтобы клиентский код ничего не знал о внутренней стуктуре вашего класса
(для внешнего мира существует интерфейс)
в) полиморфизм - сделать разные реализации конкретных классов (имеющих один и тот же интерфейс)


Home Work 5
Улучшить реализацию класса Car.
Уровень 1.
1. Использовать статические свойства и/или методы.
Например, добавить в родительский класс статическое свойство country и метод для записи этого свойства. И таким
 образом задать всем обьекам класса (или самому классу) страну производства. Или любые другие варианты статических
 свойств/методов на свое усмотрение.

2. Добавить константы класса.
Например, добавить констаны со значением стран, где каждый бренд автомобиля имеет производство. Или любые другие
варианты констант на свое усмотрение.

3. Добавить для своих классов пространства имен.

Уровень 2.


4. Написать автозагрузчик для ваших классов, учитывая пространства имен.
Следовать двум правилам:
1) назван имя классов и файлов должны совпадать.
Т.е. если класс называется Car, файл должен быть Car.php

2) размещать файлы в папки согласно неймспейсу, т.е. сруктура вложенности папок с вашими классами должна
соответствовать пронстранству имен ваших классов.
Например, если у вас будет неймспейс Ithillel\Auto и в нем класс Car (полное имя класса Ithillel\Auto\Car),
тогда файл должен быть в папке Ithillel/Auto (и путь к файлу Ithillel/Auto/Car.php)

Класс:
namespace Ithillel\Auto;
class Car
{}

Структура папок:
[YourProject] - HW4
    [Ithillel] - home_work_4
        [Auto] - Mechanisms
            Car.php
Таким образом, в своей функции автозагрузчика, когда вам придет параметром название класса, по его полному имени вы
сможете определить где находится файл с этим классом в файловой системе.




Home Work 6
I. Модифицировать класс автомобилей так, чтобы он содержал в своих свойствах обьекты других классов.
1) Использовать отношение "композиция"
2) Использовать отношение "агрегация"
Типы содержащихся внутри автомобиля объектов, и для каких из них нужна композиция, а для каких агрегация, предлагается
сделать самостоятельно, ориентируясь на модели реального мира.
Принимать извне и создавать объекты внутри - через конструктор.

II. Написать класс Driver, который использует автомобиль, при этом не сохраняя его в свойствах (автомобить не
становиться частью водителя), а просто используя. (Ассоциация)